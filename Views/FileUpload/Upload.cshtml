﻿@using System.Security.Cryptography.X509Certificates
@model FileUpload

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<h2>Create New File Upload</h2>

@using (Html.BeginForm("Create", "FileUpload", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group p-2">
        @Html.LabelFor(model => model.FileDescription)
        @Html.TextBoxFor(model => model.FileDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FileDescription)
    </div>

    <div class="form-group p-1">
        <label for="files" class="control-label"></label>
        <input type="file" id="files" name="files" multiple />
        <div id="selectedFileDetails"></div>
    </div>

    // DateExpire selection
    <div class="form-group p-2">
        @Html.Label("File expire setting")
        @Html.DropDownList("DropdownSelection", new SelectList(
    new List<SelectListItem>
    {
    new SelectListItem { Text = "12 Hours", Value = "12" },
    new SelectListItem { Text = "24 Hours", Value = "24" },
    new SelectListItem { Text = "48 Hours", Value = "48" },
    }, "Value", "Text"), new { @class = "form-control" })
    </div>

    <div class="form-group p-1">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>

    // Progress bar during upload
    <div class="progress">
        <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
            0%
        </div>
    </div>

    @if(ViewBag.Message != null)
    {
        <div class="alert" style="margin-top:20px">
            @ViewBag.Message
        </div>
    }

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    document.getElementById('files').addEventListener('change', function () {
        var selectedFiles = this.files;
        var selectedFileDetails = '';

        if (selectedFiles.length > 0) {
            for (var i = 0; i < selectedFiles.length; i++) {
                selectedFileDetails += 'File: ' + selectedFiles[i].name + '<br />';
                selectedFileDetails += 'Size: ' + (selectedFiles[i].size / 1024 / 1024).toFixed(2) + ' MB<br /><br />';
            }
        }

        document.getElementById('selectedFileDetails').innerHTML = selectedFileDetails;
    });

    $(document).ready(function () {
        $("#uploadForm").submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            var totalSize = 0;
            var totalUploaded = 0;

            $.each($("#fileInput")[0].files, function (i, file) {
                totalSize += file.size;
            });

            $.ajax({
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = (totalUploaded + evt.loaded) / totalSize * 100;
                            $(".progress-bar").width(percentComplete + "%");
                            $(".progress-bar").html(percentComplete.toFixed(2) + "%");
                        }
                    }, false);
                    return xhr;
                },
                type: 'POST',
                url: '/ControllerName/Upload',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    // Handle success response
                    totalUploaded += totalSize;
                    if (totalUploaded >= totalSize) {
                        // All files are uploaded
                    }
                },
                error: function () {
                    // Handle error
                }
            });
        });
    });

</script>